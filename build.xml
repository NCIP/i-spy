<project name="ispyPortal" default="build_war_anthill" basedir=".">
	<property file="build.properties" />

	<!--
		TARGET: COMPILE
			Compiles the source directory without anthill dependencies
		-->
	<target name="compile" depends="">
		<delete dir="${build.classes.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<javac srcdir="${source.dir}" destdir="${build.classes.dir}" source="1.5" excludes="**/test/**" debug="true" debuglevel="lines,vars,source">
			<classpath>
				<fileset dir="${source.lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${source.nondeploy.lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${anthill.dependency.artifacts.dir}">
					<include name="*.jar"/>					
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<!--
		TARGET: config_logging
		Configures the log4j.properties file using the settings in the
		build.properties file
	-->
	<target name="config_logging">
		<delete file="src/log4j.properties"/>
		<copy file="src/log4j.properties.template" tofile="src/log4j.properties"/>
		<replaceregexp file="src/log4j.properties" match="@LOGDIR@" replace="${logging.dir}" flags="g"/>
	</target>
	<!--
		TARGET: config_cache
		Configures the echache.xml file using the settings in the
		build.properties file
	-->
	<target name="config_cache">
		<delete file="src/ehcache.xml"/>
		<copy file="src/ehcache.xml.template" tofile="src/ehcache.xml"/>
		<replaceregexp file="src/ehcache.xml" match="@echache_path@" replace="${jboss.install.dir}server/${jboss.server.name}/tmp/${app.war.name}" flags="g"/>
	</target>
	<!--
		TARGET: config_analysis_server
		Configures the JMS.properties file using the settings in the
		build.properties file
	-->
	<target name="config_analysis_server" depends="config_logging, config_cache">
		<delete file="src/jms.properties"/>
		<copy file="src/jms.properties.template" tofile="src/jms.properties"/>
		<replaceregexp file="src/jms.properties" match="@JBOSS_URL@" replace="${analytical.jboss.jndi}" flags="g"/>
	</target>
	
	
	<!--
        TARGET: copy_resources
        Copies all the bundle resources to the WEB-INF/classes/ folder
    -->
	<target name="copy_resources" depends="compile">
		<copy todir="${build.classes.dir}">
			<fileset dir="${source.dir}">
				<include name="*.xml"/>
				<exclude name="ispy-jbossmq-destinations-service.xml"/>
				<include name="*.properties"/>
				<include name="*.dtd"/>
				<include name="*.xsd"/>
			</fileset>
		</copy>
	</target>
		
		<target name="config-jbossmq">
			<copy file="${source.dir}\ispy-jbossmq-destinations-service.xml" todir="${jboss.deploy.dir}"/>
		</target>
	<!--
		TARGET: build_war
		This will build the war file and should be used instead of the 
		build_war_anthill task (which is intended to be used by SCM)
	-->
	<target name="build_war_anthill" depends="copy_resources">
		<delete file="${app.war.name}.war"/>
		<war destfile="${app.war.name}.war" webxml="${webapp.dir}/WEB-INF/web.xml">
			<fileset file="${webapp.dir}/*.*"/>
			<!-- <zipfileset dir="${webapp.dir}/docs" prefix="docs"/> need for user manual-->
			<zipfileset dir="${webapp.dir}/css" prefix="css"/>
			<zipfileset dir="${webapp.dir}/images" prefix="images"/>
			<zipfileset dir="${webapp.dir}/js" prefix="js"/>
			<zipfileset dir="${webapp.dir}/WEB-INF/jsp" prefix="/WEB-INF/jsp"/>
			<zipfileset dir="${webapp.dir}/WEB-INF/data_files" prefix="/WEB-INF/data_files"/>
			<!-- <zipfileset dir="${webapp.dir}/tutorials" prefix="tutorials"/> needed for later -->
			<zipfileset dir="${webapp.dir}/xsl" prefix="xsl"/>
			<webinf dir="${webapp.dir}/WEB-INF"/>
		</war>
	</target>
</project>
